---
	import Default from "$layouts/Default.astro";
	import Stars from "$components/effects/stars.astro";
	import X from "$components/x.astro";
  import { Icon } from 'astro-icon';
---
<Default title="welcome to proxima" description="build magic components in no time">
	<div slot="headerwrapper" disposable></div>
	<div class="h-96 centered">
		<Stars amount="21" />
	</div>
	<div class="block text-center font-bold">
		<Icon class="mx-auto text-9xl transform rotate-45" name="rocket" />
		<X
			type="h1"
			class="uppercase"
			iterations="0"
			duration="3000"
			fullNode="false"
			delayBetween="600"
			trigger="visibleonce"
			animations="color: [#cfb41a, #d86c14, #d81414] | transform: [scale(3) scale(0.3)]"
		>
			proxima
		</X>
	</div>
	
	<div class="bg-centauri mt-9">
		<div class="p-6">
			<h1 class="text-center text-4xl uppercase font-bold">Documentation</h1>
			<X 
				type="p"
				class="mt-6 text-3xl"
				iterations="1"
				duration="900"
				delayBetween="30"
				trigger="visibleonce"
				fullNode="false"
				retain="transform"
				easing="cubic-bezier(0.375, 0.8, 0.5, 0.375)"
				animations="transform: [scale(0), rotate(359deg), scale(0.5), rotate(42deg), scale(1)]"
			>
				Below you will find all attributes you can use to control the animations.
			</X>
		</div>
	</div>
	<div class="p-6">
		<X 
			type="h3"
			class="underline"
			iterations="1"
			duration="600"
			delayBetween="50"
			delay="300"
			trigger="visible"
			fullNode="false"
			retain="color"
			easing="cubic-bezier(0.375, 0.8, 0.5, 0.375)"
			animations="transform: [scaleX(0), scaleX(2), scaleX(1)] | color: [red, randomColor, yellow, randomColor, orange]"
		>
			X-Element
		</X>
		<X 
			type="div"
			class="mt-3 text-yellow-500"
			iterations="1"
			duration="900"
			delay="300"
			delay="600"
			trigger="visible"
			fullNode="true"
			easing="linear"
			direction="alternate-reverse"
			animations="opacity: [0] | transform: [translateX(-70%)]"
		>
			<X 
				type="p"
				class="mt-3 text-yellow-500 text-2xl"
			>
				fx is built on top of X-Element using &lt;X&gt;Your Content&lt;/X&gt; you can add animated web components.
			</X>
		</X>
	</div>
	<div class="p-6 pt-0">
		<X 
			type="h3"
			class="underline"
			iterations="1"
			duration="600"
			delayBetween="50"
			delay="300"
			trigger="visible"
			fullNode="false"
			retain="color"
			easing="cubic-bezier(0.375, 0.8, 0.5, 0.375)"
			animations="transform: [scaleX(0), scaleX(2), scaleX(1)] | color: [red, randomColor, yellow, randomColor, orange]"
		>
			type
		</X>
		<X 
			type="div"
			class="mt-3 text-yellow-500"
			iterations="1"
			duration="900"
			delay="300"
			delay="600"
			trigger="visible"
			fullNode="true"
			easing="linear"
			direction="alternate-reverse"
			animations="opacity: [0] | transform: [translateX(-70%)]"
		>
			<X 
				type="p"
				class="mt-3 text-yellow-500 text-2xl"
			>
				Represents the type of tag you want to render, p, span, a, div, h1-h6, img etc...
				use with type="h2"
				<strong class="block mt-3 text-green-500">Default: span </strong>
			</X>
		</X>
	</div>
	<div class="p-6 pt-0">
		<X 
			type="h3"
			class="underline"
			iterations="1"
			duration="600"
			delayBetween="50"
			delay="300"
			trigger="visible"
			fullNode="false"
			retain="color"
			easing="cubic-bezier(0.375, 0.8, 0.5, 0.375)"
			animations="transform: [scaleX(0), scaleX(2), scaleX(1)] | color: [red, randomColor, yellow, randomColor, orange]"
		>
			easing
		</X>
		<X 
			type="div"
			class="mt-3 text-yellow-500"
			iterations="1"
			duration="900"
			delay="300"
			trigger="visible"
			fullNode="true"
			easing="linear"
			direction="alternate-reverse"
			animations="opacity: [0] | transform: [translateX(-70%)]"
		>
			<X 
				type="p"
				class="mt-3 text-yellow-500 text-2xl"
			>
				Add an easing function to your animation, linear, ease-in-out, cubic-bezier and more.
				<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/easing-function" target="_blank" title="mdn easing functions">Learn more.</a>
				<strong class="block mt-3 text-green-500">Default: linear </strong>
			</X>
		</X>
	</div>
	<div class="p-6 pt-0">
		<X 
			type="h3"
			class="underline"
			iterations="1"
			duration="600"
			delayBetween="50"
			delay="300"
			trigger="visible"
			fullNode="false"
			retain="color"
			easing="cubic-bezier(0.375, 0.8, 0.5, 0.375)"
			animations="transform: [scaleX(0), scaleX(2), scaleX(1)] | color: [red, randomColor, yellow, randomColor, orange]"
		>
			duration
		</X>
		<X 
			type="div"
			class="mt-3 text-yellow-500"
			iterations="1"
			duration="900"
			delay="300"
			trigger="visible"
			fullNode="true"
			easing="linear"
			direction="alternate-reverse"
			animations="opacity: [0] | transform: [translateX(-70%)]"
		>
			<X 
				type="p"
				class="mt-3 text-yellow-500 text-2xl"
			>
				The duration of the animation in milliseconds (ms) 
				<strong class="block mt-3 text-green-500">Default: 1500</strong>
			</X>
		</X>
	</div>
	<div class="p-6 pt-0">
		<X 
			type="h3"
			class="underline"
			iterations="1"
			duration="600"
			delayBetween="50"
			delay="300"
			trigger="visible"
			fullNode="false"
			retain="color"
			easing="cubic-bezier(0.375, 0.8, 0.5, 0.375)"
			animations="transform: [scaleX(0), scaleX(2), scaleX(1)] | color: [red, randomColor, yellow, randomColor, orange]"
		>
			fill
		</X>
		<X 
			type="div"
			class="mt-3 text-yellow-500"
			iterations="1"
			duration="900"
			delay="300"
			trigger="visible"
			fullNode="true"
			easing="linear"
			direction="alternate-reverse"
			animations="opacity: [0] | transform: [translateX(-70%)]"
		>
			<X 
				type="p"
				class="mt-3 text-yellow-500 text-2xl"
			>
				Control the animation fill mode to control css properties before and after the animation.
				<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/animation-fill-mode" target="_blank" title="mdn fill mode">Learn more.</a>
				<strong class="block mt-3 text-green-500">Default: both</strong>
			</X>
		</X>
	</div>
	<div class="p-6 pt-0">
		<X 
			type="h3"
			class="underline"
			iterations="1"
			duration="600"
			delayBetween="50"
			delay="300"
			trigger="visible"
			fullNode="false"
			retain="color"
			easing="cubic-bezier(0.375, 0.8, 0.5, 0.375)"
			animations="transform: [scaleX(0), scaleX(2), scaleX(1)] | color: [red, randomColor, yellow, randomColor, orange]"
		>
			gradient
		</X>
		<X 
			type="div"
			class="mt-3 text-yellow-500"
			iterations="1"
			duration="900"
			delay="300"
			trigger="visible"
			fullNode="true"
			easing="linear"
			direction="alternate-reverse"
			animations="opacity: [0] | transform: [translateX(-70%)]"
		>
			<X 
				type="p"
				class="mt-3 text-yellow-500 text-2xl"
			>
				Apply a linear gradient to the node. For example:
			</X> 
				<X 
					type="p"
					class="mt-3 text-yellow-500 text-2xl"
					gradient="to right, red, green, yellow"
				>"to right, red, green, yellow"
				</X>
			<X 
				type="p"
				class="mt-3 text-yellow-500 text-2xl"
			>
				params will be passed to the linear-gradient function
				<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/gradient/linear-gradient()" target="_blank" title="mdn linear gradient">Learn more.</a>
				<strong class="block mt-3 text-green-500">Default: ''</strong>
			</X>
		</X>
	</div>
	<div class="p-6 pt-0">
		<X 
			type="h3"
			class="underline"
			iterations="1"
			duration="600"
			delayBetween="50"
			delay="300"
			trigger="visible"
			fullNode="false"
			retain="color"
			easing="cubic-bezier(0.375, 0.8, 0.5, 0.375)"
			animations="transform: [scaleX(0), scaleX(2), scaleX(1)] | color: [red, randomColor, yellow, randomColor, orange]"
		>
			direction
		</X>
		<X 
			type="div"
			class="mt-3 text-yellow-500"
			iterations="1"
			duration="900"
			delay="300"
			trigger="visible"
			fullNode="true"
			easing="linear"
			direction="alternate-reverse"
			animations="opacity: [0] | transform: [translateX(-70%)]"
		>
			<X 
				type="p"
				class="mt-3 text-yellow-500 text-2xl"
			>
				The direction of the animation. Used to play backwards (flip the animation cycle)
				<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/animation-direction" target="_blank" title="mdn animation direction">Learn more.</a>
				<strong class="block mt-3 text-green-500">Default: normal</strong>
			</X>
		</X>
	</div>
	<div class="p-6 pt-0">
		<X 
			type="h3"
			class="underline"
			iterations="1"
			duration="600"
			delayBetween="50"
			delay="300"
			trigger="visible"
			fullNode="false"
			retain="color"
			easing="cubic-bezier(0.375, 0.8, 0.5, 0.375)"
			animations="transform: [scaleX(0), scaleX(2), scaleX(1)] | color: [red, randomColor, yellow, randomColor, orange]"
		>
			iterations
		</X>
		<X 
			type="div"
			class="mt-3 text-yellow-500"
			iterations="1"
			duration="900"
			delay="300"
			trigger="visible"
			fullNode="true"
			easing="linear"
			direction="alternate-reverse"
			animations="opacity: [0] | transform: [translateX(-70%)]"
		>
			<X 
				type="p"
				class="mt-3 text-yellow-500 text-2xl"
			>
				The number of times an animation should run. Use 0 to run infinite.
				<strong class="block mt-3 text-green-500">Default: 1</strong>
			</X>
		</X>
	</div>
	<div class="p-6 pt-0">
		<X 
			type="h3"
			class="underline"
			iterations="1"
			duration="600"
			delayBetween="50"
			delay="300"
			trigger="visible"
			fullNode="false"
			retain="color"
			easing="cubic-bezier(0.375, 0.8, 0.5, 0.375)"
			animations="transform: [scaleX(0), scaleX(2), scaleX(1)] | color: [red, randomColor, yellow, randomColor, orange]"
		>
			delay
		</X>
		<X 
			type="div"
			class="mt-3 text-yellow-500"
			iterations="1"
			duration="900"
			delay="300"
			trigger="visible"
			fullNode="true"
			easing="linear"
			direction="alternate-reverse"
			animations="opacity: [0] | transform: [translateX(-70%)]"
		>
			<X 
				type="p"
				class="mt-3 text-yellow-500 text-2xl"
			>
				The delay before an animation starts playing.
				<strong class="block mt-3 text-green-500">Default: 0</strong>
			</X>
		</X>
	</div>
	<div class="p-6 pt-0">
		<X 
			type="h3"
			class="underline"
			iterations="1"
			duration="600"
			delayBetween="50"
			delay="300"
			trigger="visible"
			fullNode="false"
			retain="color"
			easing="cubic-bezier(0.375, 0.8, 0.5, 0.375)"
			animations="transform: [scaleX(0), scaleX(2), scaleX(1)] | color: [red, randomColor, yellow, randomColor, orange]"
		>
			fullNode
		</X>
		<X 
			type="div"
			class="mt-3 text-yellow-500"
			iterations="1"
			duration="900"
			delay="300"
			trigger="visible"
			fullNode="true"
			easing="linear"
			direction="alternate-reverse"
			animations="opacity: [0] | transform: [translateX(-70%)]"
		>
			<X 
				type="p"
				class="mt-3 text-yellow-500 text-2xl"
			>
				Wether to animate the entire node or it's single parts (letters). Does only work on nodes with text content.
				<strong class="block mt-3 text-green-500">Default: "true"</strong>
			</X>
		</X>
	</div>
	<div class="p-6 pt-0">
		<X 
			type="h3"
			class="underline"
			iterations="1"
			duration="600"
			delayBetween="50"
			delay="300"
			trigger="visible"
			fullNode="false"
			retain="color"
			easing="cubic-bezier(0.375, 0.8, 0.5, 0.375)"
			animations="transform: [scaleX(0), scaleX(2), scaleX(1)] | color: [red, randomColor, yellow, randomColor, orange]"
		>
			delayBetween
		</X>
		<X 
			type="div"
			class="mt-3 text-yellow-500"
			iterations="1"
			duration="900"
			delay="300"
			trigger="visible"
			fullNode="true"
			easing="linear"
			direction="alternate-reverse"
			animations="opacity: [0] | transform: [translateX(-70%)]"
		>
			<X 
				type="p"
				class="mt-3 text-yellow-500 text-2xl"
			>
				The delay between each letter. Only works if fullNode is set to false.
				<strong class="block mt-3 text-green-500">Default: 0</strong>
			</X>
		</X>
	</div>
	<div class="p-6 pt-0">
		<X 
			type="h3"
			class="underline"
			iterations="1"
			duration="600"
			delayBetween="50"
			delay="300"
			trigger="visible"
			fullNode="false"
			retain="color"
			easing="cubic-bezier(0.375, 0.8, 0.5, 0.375)"
			animations="transform: [scaleX(0), scaleX(2), scaleX(1)] | color: [red, randomColor, yellow, randomColor, orange]"
		>
			clean
		</X>
		<X 
			type="div"
			class="mt-3 text-yellow-500"
			iterations="1"
			duration="900"
			delay="300"
			trigger="visible"
			fullNode="true"
			easing="linear"
			direction="alternate-reverse"
			animations="opacity: [0] | transform: [translateX(-70%)]"
		>
			<X 
				type="p"
				class="mt-3 text-yellow-500 text-2xl"
			>
				Decide if spans should continue to exist after the animation completes. Only works if
				fullNode is set to false.
				<strong class="block mt-3 text-green-500">Default: true</strong>
			</X>
		</X>
	</div>
	<div class="p-6 pt-0">
		<X 
			type="h3"
			class="underline"
			iterations="1"
			duration="600"
			delayBetween="50"
			delay="300"
			trigger="visible"
			fullNode="false"
			retain="color"
			easing="cubic-bezier(0.375, 0.8, 0.5, 0.375)"
			animations="transform: [scaleX(0), scaleX(2), scaleX(1)] | color: [red, randomColor, yellow, randomColor, orange]"
		>
			retain
		</X>
		<X 
			type="div"
			class="mt-3 text-yellow-500"
			iterations="1"
			duration="900"
			delay="300"
			trigger="visible"
			fullNode="true"
			easing="linear"
			direction="alternate-reverse"
			animations="opacity: [0] | transform: [translateX(-70%)]"
		>
			<X 
				type="p"
				class="mt-3 text-yellow-500 text-2xl"
			>
				You can retain specific properties, for example retain="color, transform" would retain both css properties last value
				of the animation independent of fill. If not set the node will fall back to it's initial styles.
				<strong class="block mt-3 text-green-500">Default: "false"</strong>
			</X>
		</X>
	</div>
	<div class="p-6 pt-0">
		<X 
			type="h3"
			class="underline"
			iterations="1"
			duration="600"
			delayBetween="50"
			delay="300"
			trigger="visible"
			fullNode="false"
			retain="color"
			easing="cubic-bezier(0.375, 0.8, 0.5, 0.375)"
			animations="transform: [scaleX(0), scaleX(2), scaleX(1)] | color: [red, randomColor, yellow, randomColor, orange]"
		>
			trigger
		</X>
		<X 
			type="div"
			class="mt-3 text-yellow-500"
			iterations="1"
			duration="900"
			delay="300"
			trigger="visible"
			fullNode="true"
			easing="linear"
			direction="alternate-reverse"
			animations="opacity: [0] | transform: [translateX(-70%)]"
		>
			<X 
				type="p"
				class="mt-3 text-yellow-500 text-2xl"
			>
				The trigger for the animation to run. Possible values: visible, visibleonce, click, mouseenter, mouseleave
				<strong class="block mt-3 text-green-500">Default: visible</strong>
			</X>
		</X>
	</div>
	<div class="p-6 pt-0">
		<X 
			type="h3"
			class="underline"
			iterations="1"
			duration="600"
			delayBetween="50"
			delay="300"
			trigger="visible"
			fullNode="false"
			retain="color"
			easing="cubic-bezier(0.375, 0.8, 0.5, 0.375)"
			animations="transform: [scaleX(0), scaleX(2), scaleX(1)] | color: [red, randomColor, yellow, randomColor, orange]"
		>
			animations
		</X>
		<X 
			type="div"
			class="mt-3 text-yellow-500"
			iterations="1"
			duration="900"
			delay="300"
			trigger="visible"
			fullNode="true"
			easing="linear"
			direction="alternate-reverse"
			animations="opacity: [0] | transform: [translateX(-70%)]"
		>
			<X 
				type="p"
				class="mt-3 text-yellow-500 text-2xl"
			>
				The animations to run on the node or it's parts. <strong class="block mt-3">Example:</strong>
				<span class="text-indigo-400">color: [#aa0033, #00aa33, red, orange, rgba(117, 117, 117, 0.9), randomColor, randomColor]</span>
				<span class="text-red-600"> | </span>
				<span class="text-indigo-400">transform: [translateX(-50%), scale(2), rotate(45deg)]</span>
				<span class="text-red-600"> | </span>
				<span class="text-indigo-400">padding: [3px, 6px, 9px]</span>
				<strong class="text-pink-500 block mt-3">hint: randomColor applies a random color</strong>
				<strong class="block mt-3 text-green-500">Default: ''</strong>
			</X>
		</X>
	</div>
	<div class="bg-centauri">
		<div class="p-6">
			<h1 class="text-center text-4xl uppercase font-bold">EXAMPLES</h1>
			<X 
				type="p"
				class="mt-6 text-3xl"
				iterations="1"
				duration="600"
				delayBetween="50"
				trigger="visibleonce"
				fullNode="false"
				retain="transform"
				easing="cubic-bezier(0.375, 0.8, 0.5, 0.375)"
				animations="transform: [scale(0), rotate(359deg), scale(0.5), rotate(42deg), scale(1)]"
			>
				Getting started is easy. Just install the library and you're ready to use it on your <a href="https://astro.build" target="_blank" title="with astro">astro</a> pages.
			</X>
		</div>
	</div>
	<div class="p-6">
		<X 
			type="h2"
			class="mt-6 text-center uppercase font-bold"
			iterations="5"
			duration="1000"
			delayBetween="0"
			trigger="visibleonce"
			fullNode="false"
			retain="color"
			easing="linear"
			animations="transform: [rotate(360deg), rotate(720deg), rotate(1080deg), rotate(1440deg), rotate(1800deg)] | color: [randomColor, randomColor, randomColor, randomColor, randomColor, randomColor, orange]"
		>
			animate everything with ease
		</X>
	</div>
	<div class="p-6 pt-0">
		<X 
			type="p"
			class="mt-6 text-xl text-center uppercase font-bold"
			iterations="0"
			duration="6000"
			delayBetween="50"
			trigger="visibleonce"
			fullNode="false"
			easing="linear"
			animations="color: [randomColor, randomColor, randomColor, randomColor, randomColor, randomColor, randomColor]"
		>
			everything that is a css property and supported by web animation api can be animated.
		</X>
	</div>
	<div class="p-6 text-center">
		<h3 class="text-yellow-600 underline">Create a simple loading 
		<X 
			type="span"
			class="uppercase font-bold relative -mr-2"
			iterations="0"
			duration="9000"
			trigger="visibleonce"
			fullNode="false"
			easing="linear"
			direction="normal"
			animations="transform: [rotate(360deg)]"
		>s
		</X>
		pinner</h3>
	</div>
	<div class="p-6 w-40 mx-auto">
		<X 
			type="div"
			class="loader"
			iterations="0"
			duration="6000"
			trigger="visibleonce"
			fullNode="true"
			easing="linear"
			direction="normal"
			animations="transform: [rotate(360deg)]"
		>
		</X>
	</div>
	<div class="p-6 pt-0">
		<X 
			type="p"
			class=" text-center"
			iterations="1"
			duration="900"
			delay="300	"
			trigger="visible"
			fullNode="true"
			easing="linear"
			direction="alternate-reverse"
			animations="opacity: [0] | transform: [translateY(50%)]"
		>
			You can use a selection of triggers and any web animation api property.
		</X>
	</div>
	<div class="p-6 pt-0">
		<X 
			type="p"
			class="text-9xl font-bold text-center"
			style="text-shadow: 1px 1px 1px #919191, 1px 2px 1px #919191, 1px 3px 1px #919191, 1px 4px 1px #919191, 1px 5px 1px #919191, 1px 6px 1px #919191, 1px 7px 1px #919191, 1px 8px 1px #919191, 1px 9px 1px #919191, 1px 10px 1px #919191, 1px 18px 6px rgba(16,16,16,0.4), 1px 22px 10px rgba(16,16,16,0.2), 1px 25px 35px rgba(16,16,16,0.2), 1px 30px 60px rgba(16,16,16,0.4);"
			iterations="0"
			duration="9000"
			trigger="visibleonce"
			fullNode="true"
			easing="linear"
			direction="alternate-reverse"
			animations="transform: [rotateY(359deg)] | color: [orange, yellow, red, orange]"
		>
			3D
		</X>
	</div>
	<div class="p-6">
		<p class="mt-6 mb-12 text-center">Star on Github</p>
		<X 
			type="p"
			class="my-6"
			iterations="0"
			duration="600"
			trigger="visibleonce"
			fullNode="true"
			easing="linear"
			direction="alternate-reverse"
			animations="transform: [translateY(10%), translateY(-10%)]"
		>
			<Icon class="mx-auto text-6xl" name="arrow-down" />
		</X>
	</div>
</Default>

<style>
	.loader {
		border-top: 16px solid yellowgreen;
		border-right: 16px solid green;
		border-bottom: 16px solid yellow;
		border-left: 16px solid orange;
		border-radius: 50%;
		width: 120px;
		height: 120px;
	}
</style>